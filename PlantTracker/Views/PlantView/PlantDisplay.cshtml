@model  PlantTracker.Models.Dto.PlantDto
@{
    ViewBag.Title = "PlantDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (!User.Identity.IsAuthenticated)
    {
        ViewBag.logOff = true;
    }
}

@Styles.Render("~/Plant_Details/css");

<hr />

@if (User.Identity.IsAuthenticated == true)
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Plant/PlantTable">Plant Table</a></li>
            <li class="breadcrumb-item active" aria-current="page">Plant Profile</li>
        </ol>
    </nav>
}

<hr />
<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4">Plant Profile</h1>
    </div>
</div>
@using (Html.BeginForm("PlantDetails", "Plant", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
{
    <div class="container">
        <br>
        <div id="myCarousel" class="carousel slide" data-ride="carousel">
            <!-- Indicators -->
            <ol class="carousel-indicators">
                @{
                    var Counter = 0;
                }

                @foreach (var m in Model.Images)
                {
                    if (Counter == 0)
                    {
                        <li data-target="#myCarousel" data-slide-to=@Counter class="active"></li>
                    }
                    else
                    {
                        <li data-target="#myCarousel" data-slide-to=@Counter></li>
                    }
                    Counter++;
                }

                @*<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                    <li data-target="#myCarousel" data-slide-to="1"></li>*@
            </ol>
            <!-- Wrapper for slides -->
            <div class="carousel-inner" role="listbox">
                @{
                    var CounterImg = 0;
                }
                @if (Model.imageFilePath != null)
                {
                    foreach (var m in Model.imageFilePath)
                    {
                        if (CounterImg == 0)
                        {
                            <div class="item active" style="background-image: url(@m)"></div>

                        }
                        else
                        {
                            <div class="item " style="background-image: url(@m)"></div>
                        }
                        CounterImg++;
                    }
                }

            </div>
            <!-- Left and right controls -->
            <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>


    <br />
    <hr />
    <br />
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="PlantDetailsInfo">
            <div class="Name">
                @Html.TextBoxFor(m => m.Name, new { placeholder = "Name", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Type">
                @Html.TextBoxFor(m => m.Type, new { placeholder = "Type", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Genus">
                @Html.TextBoxFor(m => m.Genus, new { placeholder = "Genus", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Species">
                @Html.TextBoxFor(m => m.Species, new { placeholder = "Species", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Subspecies">
                @Html.TextBoxFor(m => m.SubSpecies, new { placeholder = "Sub-Species", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Count">
                @Html.TextBoxFor(m => m.Count, new { placeholder = "Count", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Notes">
                @Html.TextAreaFor(m => m.Notes, new { placeholder = "Notes", @class = "form-control", @readonly = true })
            </div>
            <br />
            <div class="Parent 1">
                @Html.Label("Parent One")
                <br />
                @if (User.Identity.IsAuthenticated == true)
                {
                    @Html.DropDownListFor(m => m.ParentOneID, Model.Plants.Select(x => new SelectListItem { Text = x.Text, Value = x.Value, Selected = x.Value.Equals(Model.ParentOneID) }), "--None--", new { @class = "form-control", @readonly = true })
                }
                else
                {
                    var plantParent = PlantDAL.Repository.PlantCRUD.GetByID(Guid.Parse(Model.ParentOneID));
                    @Html.TextBox("Parent One", plantParent.Name, new { placeholder = "Parent one", @class = "form-control", @readonly = true })
                }

            </div>
            <br />
            <div class="Parent 2">
                @Html.Label("Parent Two")
                <br />
                @if (User.Identity.IsAuthenticated == true)
                {
                    @Html.DropDownListFor(m => m.ParentTwoID, Model.Plants.Select(x => new SelectListItem { Text = x.Text, Value = x.Value, Selected = x.Value.Equals(Model.ParentTwoID) }), "--None--", new { @class = "form-control", @readonly = true });
                }
                else
                {
                    var plantParent = PlantDAL.Repository.PlantCRUD.GetByID(Guid.Parse(Model.ParentTwoID));
                    @Html.TextBox("Parent Two", plantParent.Name,  new { placeholder = "Parent one", @class = "form-control", @readonly = true })
                }
            </div>
            <hr />
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="Custom_Value_Plant_Info">
            <p>
                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#CustomValue1" aria-expanded="false" aria-controls="CustomValue1">Custom Value 1</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues1.Name, new { placeholder = "Custom Value Name", @class = "form-control", @readonly = true })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue1">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues1.Notes, new { placeholder = "Custom Value 1", @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <br />

                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#CustomValue2" aria-expanded="false" aria-controls="CustomValue2">Custom Value 2</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues2.Name, new { placeholder = "Custom Value Name", @class = "form-control", @readonly = true })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue2">
                        <div class="card card-body" style="border:thin">
                            @Html.TextAreaFor(m => m.CustomValues2.Notes, new { placeholder = "Custom Value 2", @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <br />

                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#CustomValue3" aria-expanded="false" aria-controls="CustomValue3">Custom Value 3</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues3.Name, new { placeholder = "Custom Value Name", @class = "form-control", @readonly = true })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue3">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues3.Notes, new { placeholder = "Custom Value 3", @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <br />


                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#CustomValue4" aria-expanded="false" aria-controls="CustomValue4">Custom Value 4</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues4.Name, new { placeholder = "Custom Value Name", @class = "form-control", @readonly = true })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue4">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues4.Notes, new { placeholder = "Custom Value 4", @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <br />


                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#CustomValue5" aria-expanded="false" aria-controls="CustomValue5">Custom Value 5</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues5.Name, new { placeholder = "Custom Value Name", @class = "form-control", @readonly = true })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue5">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues5.Notes, new { placeholder = "Custom Value 5", @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <br />
            </p>
        </div>
    </div>
    <div class="UpdatePlant">

        @if (User.Identity.IsAuthenticated == true)
        {
            @Html.ActionLink("Edit Plant", "PlantDetails", "Plant", new { PlantID = Model.ID.ToString() }, new { @class = "btn btn-success" });
        }

    </div>
}

@Scripts.Render("~/Plant_Details/js")
