@model  PlantTracker.Models.Dto.PlantDto
@{
    ViewBag.Title = "PlantDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Plant_Details/css")



<style>
    .breadcrumb {
        background: #2e2f31;
        color: #f7f7f7;
    }

    .breadcrumb-item {
        color: #8FBC8F;
    }

    .navbar {
        margin-bottom: 0;
    }

    body {
        background: #3e4649;
        color: #f7f7f7;
        font-family: 'Montserrat', sans-serif;
    }

    h1,
    h2 {
        font-weight: bold;
    }

    p {
        font-size: 16px;
        color: #cdcdcd;
    }

    .jumbotron {
        background: #27a967;
        color: white;
        text-align: center;
    }

        .jumbotron p {
            color: white;
            font-size: 26px;
        }

    .btn-danger {
        color: #fff;
        background-color: red;
        border-color: white;
        margin-bottom: 5px;
    }

        .btn-danger:hover {
            color: red;
            background-color: white;
            border-color: white;
        }

    .btn-primary {
        color: #fff;
        background-color: transparent;
        border-color: white;
        margin-bottom: 5px;
    }

        .btn-primary:hover {
            color: #27a967;
            background-color: white;
            border-color: white;
        }

    .navbar-inverse {
        background: #2e2f31;
        border: 0;
    }

        .navbar-inverse .navbar-nav li a {
            color: #f7f7f7;
            font-size: 16px;
        }

            .navbar-inverse .navbar-nav li a:hover {
                background: #27a967;
            }

    .dropdown-menu {
        background: #2e2f31;
        border-radius: 0;
        border: 0;
    }

    .dropdown-menu li a {
        padding: 10px;
    }

    .navbar-inverse .navbar-nav .dropdown-menu li a:hover {
        background: #2c463c;
    }
</style>




<br />
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
        <li class="breadcrumb-item"><a href="PlantTable">Plant Table</a></li>
        <li class="breadcrumb-item active" aria-current="page">Plant Profile</li>
    </ol>
</nav>
<hr />
<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4">Plant Profile</h1>
    </div>
</div>
@using (Html.BeginForm("PlantDetails", "Plant", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
<div>
    @Html.HiddenFor(model => model.ID)

    @if (Model.imageFilePath != null)
    {
        for (int i = 0; i < Model.imageFilePath.Count; i++)
        {

            @Html.HiddenFor(model => model.imageFilePath[i])
        }
    }


</div>
    <div class="container">
        <br>
        <div id="myCarousel" class="carousel slide" data-ride="carousel">
            <!-- Indicators -->
            <ol class="carousel-indicators">
                @{
                    var Counter = 0;
                }
                @if (Model.Images != null || Model.Images.Count > 0)
                {
                    foreach (var m in Model.Images)
                    {
                        if (Counter == 0)
                        {
                            <li data-target="#myCarousel" data-slide-to=@Counter class="active"></li>
                        }
                        else
                        {
                            <li data-target="#myCarousel" data-slide-to=@Counter></li>
                        }
                        Counter++;
                    }
                }


                @*<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>*@
            </ol>
            <!-- Wrapper for slides -->
            <div class="carousel-inner" role="listbox">
                @{
                    var CounterImg = 0;
                }
                @if (Model.imageFilePath != null)
                {
                    foreach (var m in Model.imageFilePath)
                    {
                        if (CounterImg == 0)
                        {
                            <div class="item active" style="background-image: url(@m)"></div>

                        }
                        else
                        {
                            <div class="item " style="background-image: url(@m)"></div>
                        }
                        CounterImg++;
                    }
                }
                </div>
            <!-- Left and right controls -->
            <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>

    <div class="row">
        <br />
        <div class="col-lg-12">
            <div class="col-lg-3">
                @Html.TextBoxFor(Model => Model.Images, "", new { @type = "file", @multiple = "multiple", @class = "btn btn-primary" })
                @Html.ValidationMessageFor(Model => Model.Images, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                <button type="button" onclick="deleteImage()" class="btn btn-danger">Delete Current Image</button>
            </div>
        </div>     
    </div>


    <br />
    <hr />
    <br />
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="PlantDetailsInfo">
            <div class="Name">
                @Html.TextBoxFor(m => m.Name, new { placeholder = "Name", @class = "form-control" })
            </div>
            <br />
            <div class="Type">
                @Html.TextBoxFor(m => m.Type, new { placeholder = "Type", @class = "form-control" })
            </div>
            <br />
            <div class="Genus">
                @Html.TextBoxFor(m => m.Genus, new { placeholder = "Genus", @class = "form-control" })
            </div>
            <br />
            <div class="Species">
                @Html.TextBoxFor(m => m.Species, new { placeholder = "Species", @class = "form-control" })
            </div>
            <br />
            <div class="Subspecies">
                @Html.TextBoxFor(m => m.SubSpecies, new { placeholder = "Sub-Species", @class = "form-control" })
            </div>
            <br />
            <div class="Count">
                @Html.TextBoxFor(m => m.Count, new { placeholder = "Count", @class = "form-control" })
            </div>
            <br />
            <div class="Notes">
                @Html.TextAreaFor(m => m.Notes, new { placeholder = "Notes", @class = "form-control" })
            </div>
            <br />
            <div class="Parent 1">
                @Html.Label("Parent One")
                <br />
                @Html.DropDownListFor(m => m.ParentOneID, Model.Plants.Select(x => new SelectListItem { Text = x.Text, Value = x.Value, Selected = x.Value.Equals(Model.ParentOneID) }), "--None--", new { @class = "form-control" })
            </div>
            <br />
            <div class="Parent 2">
                @Html.Label("Parent Two")
                <br />
                @Html.DropDownListFor(m => m.ParentTwoID, Model.Plants.Select(x => new SelectListItem { Text = x.Text, Value = x.Value, Selected = x.Value.Equals(Model.ParentTwoID) }), "--None--", new { @class = "form-control" })
            </div>
            <br />
            <div>
                @*@using (Html.BeginForm("JournalDisplay", "Plant", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
                {*@
                <div class="row">
                    @Html.Label("Journals for this plant")
                    <br />
                    <div id="journalDropdown" class="col-lg-6">
                        @Html.DropDownListFor(m => m.Journals, Model.Journals.Select(x => new SelectListItem { Text = x.Text, Value = x.Value }), "--None--", new { @class = "form-control" })
                    </div>
                    <div class="col-lg-6">
                        <input type="button" value="Go To Journal" class="btn btn-primary" id="btn_journal" onclick="findJournals()"/>
                    </div>
                    @*@Html.ActionLink("Go to selected journal", "JournalDisplay", "JournalView", new { journalId = Model.Journals }, new { @class = "btn btn-success" });*@
                </div>                 
               @* }*@
            </div>
        </div>
    </div>
    <br />
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="Custom_Value_Plant_Info">
            <p>
                @Html.HiddenFor(model => model.CustomValues1.ID)
                <button class="btn btn-success" type="button" data-toggle="collapse" data-target="#CustomValue1" aria-expanded="false" aria-controls="CustomValue1">Custom Value 1</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues1.Name, new { placeholder = "Custom Value Name", @class = "form-control" })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue1">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues1.Notes, new { placeholder = "Custom Value 1", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />

                @Html.HiddenFor(model => model.CustomValues2.ID)
                <button class="btn btn-success" type="button" data-toggle="collapse" data-target="#CustomValue2" aria-expanded="false" aria-controls="CustomValue2">Custom Value 2</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues2.Name, new { placeholder = "Custom Value Name", @class = "form-control" })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue2">
                        <div class="card card-body" style="border:thin">
                            @Html.TextAreaFor(m => m.CustomValues2.Notes, new { placeholder = "Custom Value 2", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />

                @Html.HiddenFor(model => model.CustomValues3.ID)
                <button class="btn btn-success" type="button" data-toggle="collapse" data-target="#CustomValue3" aria-expanded="false" aria-controls="CustomValue3">Custom Value 3</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues3.Name, new { placeholder = "Custom Value Name", @class = "form-control" })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue3">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues3.Notes, new { placeholder = "Custom Value 3", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />

                @Html.HiddenFor(model => model.CustomValues4.ID)
                <button class="btn btn-success" type="button" data-toggle="collapse" data-target="#CustomValue4" aria-expanded="false" aria-controls="CustomValue4">Custom Value 4</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues4.Name, new { placeholder = "Custom Value Name", @class = "form-control" })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue4">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues4.Notes, new { placeholder = "Custom Value 4", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />

                @Html.HiddenFor(model => model.CustomValues5.ID)
                <button class="btn btn-success" type="button" data-toggle="collapse" data-target="#CustomValue5" aria-expanded="false" aria-controls="CustomValue5">Custom Value 5</button><br /><br />
                @Html.TextBoxFor(m => m.CustomValues5.Name, new { placeholder = "Custom Value Name", @class = "form-control" })
                <div class="col">
                    <div class="collapse multi-collapse" id="CustomValue5">
                        <div class="card card-body">
                            @Html.TextAreaFor(m => m.CustomValues5.Notes, new { placeholder = "Custom Value 5", @class = "form-control" })
                        </div>
                    </div>
                </div>
            </p>
        </div>
    </div>
    <div class="col-lg-12">
        <br />
        <hr />
        <a class="btn btn-primary" href="~/Plant/PlantTable" role="button">Back</a>
        <input type="submit" value="Update" class="btn btn-primary" />
        <button type="button" onclick="deletePlant()" class="btn btn-danger">Delete Plant</button>
    </div>
}

@Scripts.Render("~/Plant_Details/js")


